<div class="container">
    <div class="row">
        <div class="col">
            <fieldset class="">
                <legend class="">[% c.loc("Upload file to print") %]</legend>
                [% IF c.req.params.error == "INVALID_FILETYPE" %]
                    <div class="alert alert-danger" role="alert">
                        [% c.loc('Filetype was invalid, file uploads must be PDF.') %]
                        [% c.loc('If your file is not a PDF, you may use a PDF printer such as <a target="_blank" class="alert-link" href="https://www.cutepdf.com/Products/CutePDF/writer.asp">CutePDF</a>,') %]
                        [% c.loc('or a <a target="_blank" class="alert-link" href="https://www.freepdfconvert.com/">web based PDF converter</a>.') %]
                    </div>
                [% ELSE %]
                    <div class="alert alert-info" role="alert">
                        [% c.loc('If your file is not a PDF, you may use a PDF printer such as <a target="_blank" class="alert-link" href="https://www.cutepdf.com/Products/CutePDF/writer.asp">CutePDF</a>,') %]
                        [% c.loc('or a <a target="_blank" class="alert-link" href="https://www.freepdfconvert.com/">web based PDF converter</a>.') %]
                    </div>
                [% END %]
                <form action="[% c.uri_for('upload_print_file') %]" method="post" enctype="multipart/form-data">
                    <div class="form-group">
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text" id="inputGroupFileAddon01">[% c.loc("Upload") %]</span>
                            </div>
                            <div class="custom-file">
                                <input type="file" accept="application/pdf" class="form-control custom-file-input" name="print_file" id="print_file"
                                    aria-describedby="inputGroupFileAddon01" required/>
                                <label class="custom-file-label" for="inputGroupFile01">[% c.loc("Choose file") %]</label>
                            </div>
                        </div>
                    </div>

                    <p/>

                    <div class="form-group">
                        <label for="printer_id">[% c.loc("Select a printer") %]</label>
                        [% FOREACH p IN c.get_printer_configuration.printers %]
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="printer_id" id="printer-[% p.key %]" value="[% p.key %]" required>
                                <label class="form-check-label" for="printer-[% p.key %]">[% p.value.public_printer_name %]</label>
                            </div>
                        [% END %]
                    </div>

                    <button type="submit" class="btn btn-primary"><i class="fa fa-file-upload"></i> [% c.loc("Upload") %]</button>
                </form>
            </fieldset>
        </div>
    </div>

    <p/>

    <div class="container">
        <table id="print-table" cellpadding="0" cellspacing="0" border="0" class="table table-striped table-bordered">
            <thead>
            <th>[% c.loc("Type") %]</th>
            <th>[% c.loc("Status") %]</th>
            <th>[% c.loc("Printer") %]</th>
            <th>[% c.loc("Copies") %]</th>
            <th>[% c.loc("Pages") %]</th>
            <th>[% c.loc("Client") %]</th>
            <th>[% c.loc("Created") %]</th>
            </thead>
        </table>
    </div>
</div>


<script>
    // Sets the filename in the bootstrapped file uploader once a file has been selected
    $(".custom-file-input").on("change", function() {
      var fileName = $(this).val().split("\\").pop();
      $(this).siblings(".custom-file-label").addClass("selected").html(fileName);
    });

    // Initalize the Print table as a datatable
    pTable = $('#print-table').DataTable({
        [% IF !c.language.match('en') %]
        "oLanguage": {
            "sUrl": "https://cdn.datatables.net/plug-ins/9dcbecd42ad/i18n/[% c.installed_languages.${c.language} %].json"
        },
        [% END %]
        "bProcessing": true, // Indicate when the table is processing data
        "bServerSide": true, // Indicate that the datatable gets data from an HTTP GET request
        "sAjaxSource": "[% c.uri_for('/public/api/datatables/prints') %]", // The actual URL to call for data
        "order": [
            [6, "desc"]
        ],
        "fnDrawCallback": function(oSettings, json) {
            AddTableRowToolbar($('#print-table-row-toolbar'), $('#print-table'), $('#print-table tbody tr'));
        },
        "fnRowCallback": function(nRow, aData, iDisplayIndex, iDisplayIndexFull) {
        console.log(aData);
            // Type column
            $('td:eq(0)', nRow).html(aData[0].replace('PrintManager', `[% c.loc("Print Manager") %]`));

            // Status column
            $('td:eq(1)', nRow).html(aData[1].replace('In_progress', `[% c.loc("In progress") %]`));

            // Client column
            $('td:eq(5)', nRow).html(aData[5].replace('__PRINT_FROM_WEB__', `<em>[% c.loc("Uploaded from Web") %]</em>`));

            // DateTime created
            $('td:eq(6)', nRow).html(aData[6].replace('T', ' '));
        },
        "fnServerData": function(sSource, aoData, fnCallback) {
            if (window.location_filter) {
                aoData.push({
                    "name": "location_filter",
                    "value": window.location_filter
                });
            }

            $.getJSON(sSource, aoData, function(json) {
                fnCallback(json)
            });
        },
        "fnInitComplete": function() {
            $('#print-table-toolbar').prependTo($('#print-table_filter'));
        }
    });
</script>
